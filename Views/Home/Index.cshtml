@model Job_Application_Tracker.Models.ViewModels.Home.VM_Index
@{
    ViewData["Title"] = "Home Page";
    var defaultCompany = default(Job_Application_Tracker.Models.Entities.Company);
}

<div class="text-center">
    <h1 class="display-4">Companies</h1>
    <div class="row mt-5 ml-3 mr-3 d-flex">
        <div class="w-25 text-left">
            <input type="text" id="compSearch" onkeyup="doSearch()" placeholder="Search by name.." />
        </div>
        <div class="ml-auto">
            <a asp-action="Create" asp-controller="Company">Create New</a>
        </div>
    </div>
    <div class="row mt-3">
        <div class="col-12">
            <table id="companyTable" class="table table-sm table-striped table-hover border-bottom">
                <thead>
                    <tr>
                        <th>
                            @Html.LabelFor(m => defaultCompany.CompanyName)
                        </th>
                        <th>
                            @Html.LabelFor(m => defaultCompany.Website)
                        </th>
                        <th>
                            @Html.LabelFor(m => defaultCompany.SalaryOffered)
                        </th>
                        <th>
                            @Html.LabelFor(m => defaultCompany.DoNotApply)
                        </th>
                        <th>
                            @Html.LabelFor(m => defaultCompany.ApplicationStatus)
                        </th>
                        <th>
                            Date Added
                        </th>
                        <th>
                            More Info
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var comp in Model.CompanyList)
                    {
                        <tr>
                            <td>
                                @comp.CompanyName
                            </td>
                            <td>
                                <a href="@comp.Website" target="_blank">@comp.Website</a>
                            </td>
                            <td>
                                @comp.SalaryOffered
                            </td>
                            <td>
                                @if (comp.DoNotApply)
                                {
                                    <span class="text-danger font-weight-bold">
                                        Did Not Apply
                                    </span>
                                }
                                else
                                {
                                    <span class="text-success font-weight-bold">
                                        Applied
                                    </span>
                                }
                            </td>
                            <td>
                                @if (!comp.DoNotApply)
                                {
                                    <span>@comp.ApplicationStatus.ToString()</span>
                                }
                            </td>
                            <td>
                                @(comp.DateApplied.ToString("MM/dd/yy"))
                            </td>
                            <td>
                                @{
                                    var data = new Dictionary<string, string>();
                                    data.Add("cid", comp.Id.ToString());
                                }
                                <a asp-action="View" asp-controller="Company" asp-all-route-data="data">More...</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script type="text/javascript" src="js/moment.js"></script>
<!-- Adapted from https://www.w3schools.com/howto/howto_js_filter_table.asp -->
<script type="text/javascript">

    var razorData = [
        @foreach  (var item in Model.CompanyList) {
            @Html.Raw("{ "+
                "CompanyName: \"" + item.CompanyName + "\"," +
                "Website: \"" + item.Website + "\"," +
                "Salary: \"" + item.SalaryOffered + "\"," +
                "DoNotApply: \"" + item.DoNotApply + "\"," +
                "ApplicationStatus: \"" + item.ApplicationStatus + "\"," +
                "DateAdded: new Date(\"" + item.DateApplied.ToString("MM/dd/yy") + "\")," +
                "MoreInfo: \"" + item.Id + "\" },");
        }
    ];

    window.onload = function () {
        $("#compSearch").val("");
    }

    function doSearch() {
        var search = $("#compSearch");
        var searchterm = search.val().toUpperCase();
        var table = $("#companyTable");
        var rows = table.children("tbody").children("tr");

        for (var i = 0; i < rows.length; i++) {
            var row = $(rows[i]);
            var td = $(row.children("td")[0]);
            if (td) {
                var companyName = td.html().trim();
                if (companyName.toUpperCase().indexOf(searchterm) > -1) {
                    row.show();
                } else {
                    row.hide();
                }
            }
        }
    }

    // Taken from https://www.w3schools.com/howto/howto_js_sort_table.asp
    function sortTable() {
        var table, rows, switching, i, x, y, shouldSwitch;
        table = document.getElementById("companyTable");
        switching = true;
        /* Make a loop that will continue until
        no switching has been done: */
        while (switching) {
            // Start by saying: no switching is done:
            switching = false;
            rows = table.rows;
            /* Loop through all table rows (except the
            first, which contains table headers): */
            for (i = 1; i < (rows.length - 1); i++) {
                // Start by saying there should be no switching:
                shouldSwitch = false;
                /* Get the two elements you want to compare,
                one from current row and one from the next: */
                x = rows[i].getElementsByTagName("TD")[5];
                y = rows[i + 1].getElementsByTagName("TD")[5];
                // Check if the two rows should switch place:
                if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                    // If so, mark as a switch and break the loop:
                    shouldSwitch = true;
                    break;
                }
            }
            if (shouldSwitch) {
                /* If a switch has been marked, make the switch
                and mark that a switch has been done: */
                rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                switching = true;
            }
        }
    }
</script>
